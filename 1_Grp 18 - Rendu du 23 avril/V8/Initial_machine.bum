<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.machineFile org.eventb.core.configuration="org.eventb.core.fwd" org.eventb.core.generated="false" org.eventb.texttools.text_lastmodified="1682189746848" org.eventb.texttools.text_representation="machine Initial_machine sees Context&#10;&#10;variables Gares // Représente les gares&#10;          Gares_urgence // Représente les gares où le dédoublement de voie est possible. Pour éviter deux trains de se rentrer dedans&#10;          nb_train // Représente le nombre de train dans une gare&#10;          Line // Représente les premières lignes de convois. Donc, le sens d'un train vers une gare&#10;          Line_urgence // Représente les lignes associés aux gares d'urgences.&#10;          Aiguillages // Représente la postion des aiguillages pour effectuer un dédoublement de la voie&#10;          nb_train_urgence // Représente le nombre de train dans une gare d'urgence&#10;          Second_Line // Représente les secondes lignes de convois. Donc le sens opposé d'un train vers une gare&#10;          In_First_Line // Représente les bornes de contact présente sur les premières lignes de convois&#10;          In_Second_Line // Représente les bornes de contact présente sur les secondes lignes de convois&#10;          Line_Gare // Représente les lignes de convois auquel sont associés les gares de destinations.&#10;          nb_train_total // Représente le nombre de train total dans le système&#10;          Freinage_Line // Représente les gares auquel&#10;          temp // Variable temporaire permettant de décrementer de 1 les trains sur la première ligne de convois (nécessaire pour la marche arrière)&#10;          temp2 // Variable temporaire permettant de décrementer de 1 les trains sur la seconde ligne de convois (nécessaire pour la marche arrière)&#10;          temp3 // Variable temporaire permettant de vérifier la présence d'un train sur la première ligne de convois (nécessaire pour la marche arrière)&#10;          temp4 // Variable temporaire permettant de vérifier la présence d'un train sur la seconde ligne de convois (nécessaire pour la marche arrière)&#10;          State_system // Vérie l'état du système. Bloque les autres événements si deux trains vont entrer en collision&#10;          State_brake // Vérifie l'état du freinage. Marche arrière possible uniquement si deux trains sont considérés à l'arrêt&#10;&#10;&#10;invariants&#10;  @inv1 Gares ∈ { Bruxelles, Namur, Liege}→ℕ&#10;  @inv2 nb_train ∈ { Bruxelles, Namur, Liege, Huy, Ottignies, Leuven}→ℕ&#10;  @inv3 Line ∈ {Namur↦Bruxelles,Bruxelles↦Namur, Namur↦Liege, Liege↦Namur, Bruxelles↦Liege, Liege↦Bruxelles} → ℕ&#10;  @inv4 Aiguillages ∈ {Namur↦Bruxelles,Bruxelles↦Namur, Namur↦Liege, Liege↦Namur, Bruxelles↦Liege, Liege↦Bruxelles}→BOOL&#10;  @inv5 Gares_urgence ∈ {Huy,Ottignies,Leuven}→ℕ&#10;  @inv6 nb_train_urgence ∈ {Huy,Ottignies,Leuven} → ℕ&#10;  @inv7 Line_urgence ∈ {Namur↦Bruxelles,Bruxelles↦Namur, Namur↦Liege, Liege↦Namur, Bruxelles↦Liege, Liege↦Bruxelles}→dom(Gares_urgence)&#10;  @inv8 Second_Line ∈ {Namur↦Bruxelles, Bruxelles↦Namur, Namur↦Liege, Liege↦Namur, Bruxelles↦Liege, Liege↦Bruxelles} → ℕ&#10;  @inv9 In_Second_Line ∈ {Namur↦Bruxelles, Bruxelles↦Namur, Namur↦Liege, Liege↦Namur, Bruxelles↦Liege, Liege↦Bruxelles} → BOOL&#10;  @inv10 Line_Gare ∈ {Namur↦Bruxelles, Bruxelles↦Namur, Namur↦Liege, Liege↦Namur, Bruxelles↦Liege, Liege↦Bruxelles} → dom(Gares)&#10;  @inv11 nb_train_total ∈ ℕ&#10;  @inv12 Freinage_Line ∈ {Bruxelles, Namur, Liege} → BOOL&#10;  @inv13 temp ∈ ℕ&#10;  @inv14 temp2 ∈ ℕ&#10;  @inv15 State_system ∈ BOOL&#10;  @inv16 State_brake ∈ BOOL&#10;  @inv17 In_First_Line ∈ {Namur↦Bruxelles, Bruxelles↦Namur, Namur↦Liege, Liege↦Namur, Bruxelles↦Liege, Liege↦Bruxelles} → BOOL&#10;  @inv18 temp3 ∈ BOOL&#10;  @inv19 temp4 ∈ BOOL&#10;&#10;events&#10;  event INITIALISATION&#10;    then&#10;      @act1 Gares ≔ { Namur↦1, Bruxelles↦2, Liege↦3}&#10;      @act2 nb_train ≔ { Namur↦0, Bruxelles↦0, Liege↦0, Huy↦0, Ottignies↦0, Leuven↦0}&#10;      @act3 Line ≔ {Namur↦Bruxelles↦0,Bruxelles↦Namur↦0, Namur↦Liege↦0, Liege↦Namur↦0, Bruxelles↦Liege↦0, Liege↦Bruxelles↦0}&#10;      @act4 nb_train_urgence ≔ {Huy↦0,Ottignies↦0,Leuven↦0}&#10;      @act5 Gares_urgence ≔ {Huy↦1,Ottignies↦2,Leuven↦3}&#10;      @act6 Line_urgence ≔ {Namur↦Bruxelles↦Ottignies,Bruxelles↦Namur↦Ottignies, Namur↦Liege↦Huy, Liege↦Namur↦Huy, Bruxelles↦Liege↦Leuven, Liege↦Bruxelles↦Leuven}&#10;      @act7 Aiguillages ≔ {Namur↦Bruxelles↦FALSE,Bruxelles↦Namur↦FALSE, Namur↦Liege↦FALSE, Liege↦Namur↦FALSE, Bruxelles↦Liege↦FALSE, Liege↦Bruxelles↦FALSE}&#10;      @act8 Second_Line ≔ {Namur↦Bruxelles↦0,Bruxelles↦Namur↦0, Namur↦Liege↦0, Liege↦Namur↦0, Bruxelles↦Liege↦0, Liege↦Bruxelles↦0}&#10;      @act9 In_Second_Line ≔ {Namur↦Bruxelles↦FALSE, Bruxelles↦Namur↦FALSE, Namur↦Liege↦FALSE, Liege↦Namur↦FALSE, Bruxelles↦Liege↦FALSE, Liege↦Bruxelles↦FALSE}&#10;      @act10 Line_Gare ≔ {Namur↦Bruxelles↦Bruxelles, Bruxelles↦Namur↦Namur, Namur↦Liege↦Liege, Liege↦Namur↦Namur, Bruxelles↦Liege↦Liege, Liege↦Bruxelles↦Bruxelles}&#10;      @act11 nb_train_total ≔ 0&#10;      @act12 Freinage_Line ≔ {Bruxelles↦FALSE, Namur↦FALSE, Liege↦FALSE}&#10;      @act13 temp ≔ 0&#10;      @act14 temp2 ≔ 0&#10;      @act15 State_system ≔ FALSE&#10;      @act16 State_brake ≔ FALSE&#10;      @act17 In_First_Line ≔ {Namur↦Bruxelles↦FALSE, Bruxelles↦Namur↦FALSE, Namur↦Liege↦FALSE, Liege↦Namur↦FALSE, Bruxelles↦Liege↦FALSE, Liege↦Bruxelles↦FALSE}&#10;      @act18 temp3 ≔ FALSE&#10;      @act19 temp4 ≔ FALSE&#10;  end&#10;&#10;  event Apparition_train&#10;    any SelectGare // Sélectionne une gare pour faire apparaître un train&#10;&#10;    where&#10;      @grd1 SelectGare ∈ dom(Gares)&#10;      @grd2 nb_train(SelectGare) &lt; 2&#10;      @grd3 nb_train_total &lt; 4&#10;      @grd4 Freinage_Line(SelectGare) = FALSE&#10;      @grd5 State_system = FALSE&#10;      @grd6 State_brake = FALSE&#10;    then&#10;      @act1 nb_train(SelectGare) ≔ nb_train(SelectGare) + 1&#10;      @act2 nb_train_total ≔ nb_train_total + 1&#10;  end&#10;&#10;  event MainStation_To_Line&#10;    any SelectGP // Sélectionne une gare d'arrivée&#10;        SelectTrajet // Sélectionne une gare de destination&#10;        SelectLine // Fais la liaison entre les lignes de convois grâce aux gares d'arrivées et de destinations sélectionné. Ainsi est créé, le nom du train&#10;&#10;    where&#10;      @grd1 SelectGP ∈ dom(Gares) ∧ nb_train(SelectGP) ≥ 1&#10;      @grd2 SelectTrajet ∈ dom(Gares)&#10;      @grd3 SelectLine ∈ dom(Line) ∧ SelectLine = SelectGP↦SelectTrajet&#10;      @grd4 Line(SelectLine) &lt; 1&#10;      @grd5 State_system = FALSE&#10;      @grd6 State_brake = FALSE&#10;    then&#10;      @act1 nb_train(SelectGP) ≔ nb_train(SelectGP) − 1&#10;      @act2 Line(SelectLine) ≔ Line(SelectLine) + 1&#10;      @act3 In_First_Line(SelectLine) ≔ TRUE&#10;  end&#10;&#10;  event Line_To_Emergency_Station&#10;    any SelectLine // Sélectionne le nom du train (le nom est répresenté par la ligne de trajet du train)&#10;        SelectGareUrgence // Séléctionne la gare d'urgence pour éviter une collision&#10;&#10;    where&#10;      @grd1 SelectLine ∈ dom(Line)&#10;      @grd2 Line(SelectLine)  ≥ 1&#10;      @grd3 SelectGareUrgence ∈ dom(Gares_urgence) ∧ nb_train_urgence(SelectGareUrgence) &lt; 1&#10;      @grd4 Line_urgence(SelectLine) = SelectGareUrgence&#10;      @grd5 Aiguillages(SelectLine) = TRUE&#10;      @grd6 State_system = FALSE&#10;      @grd7 State_brake = FALSE&#10;    then&#10;      @act1 nb_train_urgence(SelectGareUrgence) ≔ nb_train_urgence(SelectGareUrgence) + 1&#10;      @act2 Line(SelectLine) ≔ Line(SelectLine) − 1&#10;      @act3 In_First_Line(SelectLine) ≔ FALSE&#10;  end&#10;&#10;  event Emergency_To_Second_Line&#10;    any SelectGare // Sélectionne la gare d'urgence de départ&#10;        SelectLine // Sélectionne le nom du train présent dans la gare de départ (le nom est répresenté par la ligne de trajet du train)&#10;&#10;    where&#10;      @grd1 SelectGare ∈ dom(Gares_urgence)&#10;      @grd2 SelectLine ∈ dom(Line)&#10;      @grd3 Line_urgence(SelectLine) = SelectGare&#10;      @grd4 nb_train_urgence(SelectGare) ≥ 1&#10;      @grd5 Second_Line(SelectLine) &lt; 1&#10;      @grd6 Aiguillages(SelectLine) = TRUE&#10;      @grd7 State_system = FALSE&#10;      @grd8 State_brake = FALSE&#10;    then&#10;      @act1 nb_train_urgence(SelectGare) ≔ nb_train_urgence(SelectGare) − 1&#10;      @act2 Second_Line(SelectLine) ≔ Second_Line(SelectLine) + 1&#10;      @act3 In_Second_Line(SelectLine) ≔ TRUE&#10;  end&#10;&#10;  event Line_To_Second_Line&#10;    any SelectLine // Sélectionne la gare d'ou provient le train&#10;        SelectSecondLine // Sélectionne la gare où il se rendra&#10;&#10;    where&#10;      @grd1 SelectLine ∈ dom(dom(Line)) ∧ SelectSecondLine ∈ ran(dom(Line))&#10;      @grd2 SelectLine ≠ SelectSecondLine&#10;      @grd3 Line(SelectLine↦SelectSecondLine) = 1 ∧ Second_Line(SelectLine↦SelectSecondLine)&lt;1&#10;      @grd4 Aiguillages(SelectLine↦SelectSecondLine) = FALSE&#10;      @grd5 State_system = FALSE&#10;      @grd6 State_brake = FALSE&#10;      @grd7 (Line(SelectLine↦SelectSecondLine) ≠ 1 ∧ Second_Line(SelectSecondLine↦SelectLine)≠1) ∨ (Line(SelectLine↦SelectSecondLine) ≠ 1 ∧ Second_Line(SelectSecondLine↦SelectLine)≠0) ∨ (Line(SelectLine↦SelectSecondLine) ≠ 0 ∧ Second_Line(SelectSecondLine↦SelectLine)≠1)&#10;    then&#10;      @act1 In_Second_Line(SelectLine↦SelectSecondLine) ≔ TRUE&#10;      @act2 Line(SelectLine↦SelectSecondLine) ≔ Line(SelectLine↦SelectSecondLine) − 1&#10;      @act3 Second_Line(SelectLine↦SelectSecondLine) ≔ Second_Line(SelectLine↦SelectSecondLine) + 1&#10;      @act4 State_system :∣ (State_system' ∈ BOOL) ∧ ((Line(SelectLine↦SelectSecondLine) = 1 ∧ Second_Line(SelectSecondLine↦SelectLine)=1 ⇒ State_system' = TRUE) ∧ (Line(SelectLine↦SelectSecondLine) ≠ 1 ∨ Second_Line(SelectSecondLine↦SelectLine)≠1 ⇒ State_system' = FALSE))&#10;      @act5 In_First_Line(SelectLine↦SelectSecondLine) ≔ FALSE&#10;  end&#10;&#10;  event Second_Line_To_MainStation&#10;    any SelectLine // Sélectionne la gare d'où provient le train&#10;        SelectSecondLine // Sélectionne la gare d'arrivée où le train est censé aller&#10;        SelectGare // Sélectionne la gare d'arrivée (Peut-être redondant mais nécessaire pour les gardes de l'événement)&#10;&#10;    where&#10;      @grd1 SelectLine ∈ dom(dom(Second_Line)) ∧ SelectSecondLine ∈ ran(dom(Second_Line))&#10;      @grd2 SelectLine ≠ SelectSecondLine&#10;      @grd3 SelectGare ∈ ran(dom(Second_Line))&#10;      @grd4 Line_Gare(SelectLine↦SelectSecondLine) = SelectGare&#10;      @grd5 Second_Line(SelectLine↦SelectSecondLine) ≥ 1 ∧ nb_train(SelectGare) &lt; 1&#10;      @grd6 In_Second_Line(SelectLine↦SelectSecondLine) = TRUE&#10;      @grd7 In_First_Line(SelectSecondLine↦SelectLine) = FALSE&#10;      @grd8 State_system = FALSE&#10;      @grd9 State_brake = FALSE&#10;    then&#10;      @act1 Second_Line(SelectLine↦SelectSecondLine) ≔ Second_Line(SelectLine↦SelectSecondLine) − 1&#10;      @act2 nb_train(SelectGare) ≔ nb_train(SelectGare)+1&#10;      @act3 In_Second_Line(SelectLine↦SelectSecondLine) ≔ FALSE&#10;  end&#10;&#10;  event Choose_Aiguillage&#10;    any SelectLine // Sélectionne la ligne de convois où on souhaite changer l'aiguillage&#10;        SelectAction // Sélectionne la position de l'aiguillage. (TRUE or FALSE)&#10;&#10;    where&#10;      @grd1 SelectLine ∈ dom(Line)&#10;      @grd2 SelectAction ∈ BOOL ∧ SelectAction ≠ Aiguillages(SelectLine)&#10;    then&#10;      @act1 Aiguillages(SelectLine) ≔ SelectAction&#10;  end&#10;&#10;  event Freinage_Urgence&#10;    any SelectLine // Sélectionne la première ligne de convois où se trouve un train&#10;        SelectSecondLine // Sélectionne la seconde ligne de convois où se trouve le second train&#10;        SelectGare // Sélectionne les gares possibles pour enclencher une marche arrière&#10;&#10;    where&#10;      @grd1 SelectLine ∈ dom(Line_Gare) ∧ SelectSecondLine ∈ dom(Line_Gare)&#10;      @grd2 Line(SelectLine) ≥ 1  ∧ Second_Line(SelectSecondLine) ≥ 1&#10;      @grd3 SelectLine ≠ SelectSecondLine&#10;      @grd4 (Line(SelectSecondLine) &lt; 1 ∧ SelectGare = Line_Gare(SelectLine)) ∨ ( SelectGare = Line_Gare(SelectSecondLine) )&#10;      @grd5 nb_train(SelectGare) &lt; 2&#10;      @grd6 State_brake = FALSE&#10;    then&#10;      @act1 temp :∣ (temp' ∈ ℕ ∧ (SelectGare = Line_Gare(SelectLine) ⇒ temp'= 0) ∧ ( SelectGare = Line_Gare(SelectSecondLine)⇒ temp'=1))&#10;      @act2 temp2 :∣ (temp2' ∈ ℕ ∧ (SelectGare = Line_Gare(SelectLine) ⇒ temp2'= 1) ∧ ( SelectGare = Line_Gare(SelectSecondLine)⇒ temp2'=0))&#10;      @act3 temp3 :∣ (temp3' ∈ BOOL ∧ (SelectGare = Line_Gare(SelectLine) ⇒ temp3'= TRUE) ∧ ( SelectGare = Line_Gare(SelectSecondLine)⇒ temp3'=FALSE))&#10;      @act4 temp4 :∣ (temp4' ∈ BOOL ∧ (SelectGare = Line_Gare(SelectLine) ⇒ temp4'= FALSE) ∧ ( SelectGare = Line_Gare(SelectSecondLine)⇒ temp4'=TRUE))&#10;      @act5 Freinage_Line(SelectGare) ≔ TRUE&#10;      @act6 State_system ≔ TRUE&#10;      @act7 State_brake ≔ TRUE&#10;  end&#10;&#10;  event Marche_Arriere_To_MainStation&#10;    any SelectLine // Sélectionne la première ligne de convois où se trouve un train&#10;        SelectSecondLine // Sélectionne la seconde ligne de convois où se trouve le second train&#10;        SelectGare // Sélectionne les gares possibles pour enclencher une marche arrière&#10;&#10;    where&#10;      @grd1 SelectLine ∈ dom(Line_Gare) ∧ SelectSecondLine ∈ dom(Line_Gare)&#10;      @grd2 Line(SelectLine) ≥ 1  ∧ Second_Line(SelectSecondLine) ≥ 1&#10;      @grd3 SelectLine ≠ SelectSecondLine&#10;      @grd4 SelectGare = Line_Gare(SelectLine) ∨ SelectGare = Line_Gare(SelectSecondLine)&#10;      @grd5 nb_train(SelectGare) &lt; 2&#10;      @grd6 Freinage_Line(SelectGare) = TRUE&#10;    then&#10;      @act1 Line(SelectLine) ≔ Line(SelectLine) − temp&#10;      @act2 Second_Line(SelectSecondLine) ≔ Second_Line(SelectSecondLine) − temp2&#10;      @act3 nb_train(SelectGare) ≔ nb_train(SelectGare) + 1&#10;      @act4 Freinage_Line(SelectGare) ≔ FALSE&#10;      @act5 State_system ≔ FALSE&#10;      @act6 State_brake ≔ FALSE&#10;      @act7 In_First_Line(SelectLine) ≔ temp3&#10;      @act8 In_Second_Line(SelectSecondLine) ≔ temp4&#10;  end&#10;end&#10;" version="5">
    <org.eventb.core.seesContext name="_SrbaAOE_Ee2KaoH_Krztlw" org.eventb.core.target="Context"/>
    <org.eventb.core.event name="'" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="INITIALISATION">
        <org.eventb.core.action name="_Srd2QOE_Ee2KaoH_Krztlw" org.eventb.core.assignment="Gares ≔ { Namur↦1, Bruxelles↦2, Liege↦3}" org.eventb.core.generated="false" org.eventb.core.label="act1"/>
        <org.eventb.core.action name="_Srd2QeE_Ee2KaoH_Krztlw" org.eventb.core.assignment="nb_train ≔ { Namur↦0, Bruxelles↦0, Liege↦0, Huy↦0, Ottignies↦0, Leuven↦0}" org.eventb.core.generated="false" org.eventb.core.label="act2"/>
        <org.eventb.core.action name="_Srd2QuE_Ee2KaoH_Krztlw" org.eventb.core.assignment="Line ≔ {Namur↦Bruxelles↦0,Bruxelles↦Namur↦0, Namur↦Liege↦0, Liege↦Namur↦0, Bruxelles↦Liege↦0, Liege↦Bruxelles↦0}" org.eventb.core.generated="false" org.eventb.core.label="act3"/>
        <org.eventb.core.action name="_Srd2Q-E_Ee2KaoH_Krztlw" org.eventb.core.assignment="nb_train_urgence ≔ {Huy↦0,Ottignies↦0,Leuven↦0}" org.eventb.core.generated="false" org.eventb.core.label="act4"/>
        <org.eventb.core.action name="_Srd2ROE_Ee2KaoH_Krztlw" org.eventb.core.assignment="Gares_urgence ≔ {Huy↦1,Ottignies↦2,Leuven↦3}" org.eventb.core.generated="false" org.eventb.core.label="act5"/>
        <org.eventb.core.action name="_SrgSgOE_Ee2KaoH_Krztlw" org.eventb.core.assignment="Line_urgence ≔ {Namur↦Bruxelles↦Ottignies,Bruxelles↦Namur↦Ottignies, Namur↦Liege↦Huy, Liege↦Namur↦Huy, Bruxelles↦Liege↦Leuven, Liege↦Bruxelles↦Leuven}" org.eventb.core.generated="false" org.eventb.core.label="act6"/>
        <org.eventb.core.action name="_SrgSgeE_Ee2KaoH_Krztlw" org.eventb.core.assignment="Aiguillages ≔ {Namur↦Bruxelles↦FALSE,Bruxelles↦Namur↦FALSE, Namur↦Liege↦FALSE, Liege↦Namur↦FALSE, Bruxelles↦Liege↦FALSE, Liege↦Bruxelles↦FALSE}" org.eventb.core.generated="false" org.eventb.core.label="act7"/>
        <org.eventb.core.action name="_SrgSguE_Ee2KaoH_Krztlw" org.eventb.core.assignment="Second_Line ≔ {Namur↦Bruxelles↦0,Bruxelles↦Namur↦0, Namur↦Liege↦0, Liege↦Namur↦0, Bruxelles↦Liege↦0, Liege↦Bruxelles↦0}" org.eventb.core.generated="false" org.eventb.core.label="act8"/>
        <org.eventb.core.action name="_SrgSg-E_Ee2KaoH_Krztlw" org.eventb.core.assignment="In_Second_Line ≔ {Namur↦Bruxelles↦FALSE, Bruxelles↦Namur↦FALSE, Namur↦Liege↦FALSE, Liege↦Namur↦FALSE, Bruxelles↦Liege↦FALSE, Liege↦Bruxelles↦FALSE}" org.eventb.core.generated="false" org.eventb.core.label="act9"/>
        <org.eventb.core.action name="_SrgShOE_Ee2KaoH_Krztlw" org.eventb.core.assignment="Line_Gare ≔ {Namur↦Bruxelles↦Bruxelles, Bruxelles↦Namur↦Namur, Namur↦Liege↦Liege, Liege↦Namur↦Namur, Bruxelles↦Liege↦Liege, Liege↦Bruxelles↦Bruxelles}" org.eventb.core.generated="false" org.eventb.core.label="act10"/>
        <org.eventb.core.action name="_SriuwOE_Ee2KaoH_Krztlw" org.eventb.core.assignment="nb_train_total ≔ 0" org.eventb.core.generated="false" org.eventb.core.label="act11"/>
        <org.eventb.core.action name="_SriuweE_Ee2KaoH_Krztlw" org.eventb.core.assignment="Freinage_Line ≔ {Bruxelles↦FALSE, Namur↦FALSE, Liege↦FALSE}" org.eventb.core.generated="false" org.eventb.core.label="act12"/>
        <org.eventb.core.action name="_SriuwuE_Ee2KaoH_Krztlw" org.eventb.core.assignment="temp ≔ 0" org.eventb.core.generated="false" org.eventb.core.label="act13"/>
        <org.eventb.core.action name="_Sriuw-E_Ee2KaoH_Krztlw" org.eventb.core.assignment="temp2 ≔ 0" org.eventb.core.generated="false" org.eventb.core.label="act14"/>
        <org.eventb.core.action name="_SriuxOE_Ee2KaoH_Krztlw" org.eventb.core.assignment="State_system ≔ FALSE" org.eventb.core.generated="false" org.eventb.core.label="act15"/>
        <org.eventb.core.action name="_SrlLAOE_Ee2KaoH_Krztlw" org.eventb.core.assignment="State_brake ≔ FALSE" org.eventb.core.generated="false" org.eventb.core.label="act16"/>
        <org.eventb.core.action name="_SrlLAeE_Ee2KaoH_Krztlw" org.eventb.core.assignment="In_First_Line ≔ {Namur↦Bruxelles↦FALSE, Bruxelles↦Namur↦FALSE, Namur↦Liege↦FALSE, Liege↦Namur↦FALSE, Bruxelles↦Liege↦FALSE, Liege↦Bruxelles↦FALSE}" org.eventb.core.generated="false" org.eventb.core.label="act17"/>
        <org.eventb.core.action name="_SrlLAuE_Ee2KaoH_Krztlw" org.eventb.core.assignment="temp3 ≔ FALSE" org.eventb.core.generated="false" org.eventb.core.label="act18"/>
        <org.eventb.core.action name="_SrlLA-E_Ee2KaoH_Krztlw" org.eventb.core.assignment="temp4 ≔ FALSE" org.eventb.core.generated="false" org.eventb.core.label="act19"/>
    </org.eventb.core.event>
    <org.eventb.core.variable name="_SrlLBOE_Ee2KaoH_Krztlw" org.eventb.core.comment="Représente les gares" org.eventb.core.generated="false" org.eventb.core.identifier="Gares"/>
    <org.eventb.core.variable name="_SrlLBeE_Ee2KaoH_Krztlw" org.eventb.core.comment="Représente les gares où le dédoublement de voie est possible. Pour éviter deux trains de se rentrer dedans" org.eventb.core.generated="false" org.eventb.core.identifier="Gares_urgence"/>
    <org.eventb.core.variable name="_SrnnQOE_Ee2KaoH_Krztlw" org.eventb.core.comment="Représente le nombre de train dans une gare" org.eventb.core.generated="false" org.eventb.core.identifier="nb_train"/>
    <org.eventb.core.variable name="_SrnnQeE_Ee2KaoH_Krztlw" org.eventb.core.comment="Représente les premières lignes de convois. Donc, le sens d'un train vers une gare" org.eventb.core.generated="false" org.eventb.core.identifier="Line"/>
    <org.eventb.core.variable name="_SrnnQuE_Ee2KaoH_Krztlw" org.eventb.core.comment="Représente les lignes associés aux gares d'urgences." org.eventb.core.generated="false" org.eventb.core.identifier="Line_urgence"/>
    <org.eventb.core.variable name="_SrnnQ-E_Ee2KaoH_Krztlw" org.eventb.core.comment="Représente la postion des aiguillages pour effectuer un dédoublement de la voie" org.eventb.core.generated="false" org.eventb.core.identifier="Aiguillages"/>
    <org.eventb.core.variable name="_SrnnROE_Ee2KaoH_Krztlw" org.eventb.core.comment="Représente le nombre de train dans une gare d'urgence" org.eventb.core.generated="false" org.eventb.core.identifier="nb_train_urgence"/>
    <org.eventb.core.variable name="_SrqDgOE_Ee2KaoH_Krztlw" org.eventb.core.comment="Représente les secondes lignes de convois. Donc le sens opposé d'un train vers une gare" org.eventb.core.generated="false" org.eventb.core.identifier="Second_Line"/>
    <org.eventb.core.variable name="_SrqDgeE_Ee2KaoH_Krztlw" org.eventb.core.comment="Représente les bornes de contact présente sur les premières lignes de convois" org.eventb.core.generated="false" org.eventb.core.identifier="In_First_Line"/>
    <org.eventb.core.variable name="_SrqDguE_Ee2KaoH_Krztlw" org.eventb.core.comment="Représente les bornes de contact présente sur les secondes lignes de convois" org.eventb.core.generated="false" org.eventb.core.identifier="In_Second_Line"/>
    <org.eventb.core.variable name="_SrqDg-E_Ee2KaoH_Krztlw" org.eventb.core.comment="Représente les lignes de convois auquel sont associés les gares de destinations." org.eventb.core.generated="false" org.eventb.core.identifier="Line_Gare"/>
    <org.eventb.core.variable name="_SrqDhOE_Ee2KaoH_Krztlw" org.eventb.core.comment="Représente le nombre de train total dans le système" org.eventb.core.generated="false" org.eventb.core.identifier="nb_train_total"/>
    <org.eventb.core.variable name="_SrsfwOE_Ee2KaoH_Krztlw" org.eventb.core.comment="Représente les lignes où est un freinage est effectué" org.eventb.core.generated="false" org.eventb.core.identifier="Freinage_Line"/>
    <org.eventb.core.variable name="_SrsfweE_Ee2KaoH_Krztlw" org.eventb.core.comment="Variable temporaire permettant de décrementer de 1 les trains sur la première ligne de convois (nécessaire pour la marche arrière)" org.eventb.core.generated="false" org.eventb.core.identifier="temp"/>
    <org.eventb.core.variable name="_SrsfwuE_Ee2KaoH_Krztlw" org.eventb.core.comment="Variable temporaire permettant de décrementer de 1 les trains sur la seconde ligne de convois (nécessaire pour la marche arrière)" org.eventb.core.generated="false" org.eventb.core.identifier="temp2"/>
    <org.eventb.core.variable name="_Srsfw-E_Ee2KaoH_Krztlw" org.eventb.core.comment="Variable temporaire permettant de vérifier la présence d'un train sur la première ligne de convois (nécessaire pour la marche arrière)" org.eventb.core.generated="false" org.eventb.core.identifier="temp3"/>
    <org.eventb.core.variable name="_SrsfxOE_Ee2KaoH_Krztlw" org.eventb.core.comment="Variable temporaire permettant de vérifier la présence d'un train sur la seconde ligne de convois (nécessaire pour la marche arrière)" org.eventb.core.generated="false" org.eventb.core.identifier="temp4"/>
    <org.eventb.core.variable name="_Sru8AOE_Ee2KaoH_Krztlw" org.eventb.core.comment="Vérie l'état du système. Bloque les autres événements si deux trains vont entrer en collision" org.eventb.core.generated="false" org.eventb.core.identifier="State_system"/>
    <org.eventb.core.variable name="_Sru8AeE_Ee2KaoH_Krztlw" org.eventb.core.comment="Vérifie l'état du freinage. Marche arrière possible uniquement si deux trains sont considérés à l'arrêt" org.eventb.core.generated="false" org.eventb.core.identifier="State_brake"/>
    <org.eventb.core.invariant name="_Sru8AuE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="inv1" org.eventb.core.predicate="Gares ∈ { Bruxelles, Namur, Liege}→ℕ"/>
    <org.eventb.core.invariant name="_Sru8A-E_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="inv2" org.eventb.core.predicate="nb_train ∈ { Bruxelles, Namur, Liege, Huy, Ottignies, Leuven}→ℕ"/>
    <org.eventb.core.invariant name="_Sru8BOE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="inv3" org.eventb.core.predicate="Line ∈ {Namur↦Bruxelles,Bruxelles↦Namur, Namur↦Liege, Liege↦Namur, Bruxelles↦Liege, Liege↦Bruxelles} → ℕ"/>
    <org.eventb.core.invariant name="_SrxYQOE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="inv4" org.eventb.core.predicate="Aiguillages ∈ {Namur↦Bruxelles,Bruxelles↦Namur, Namur↦Liege, Liege↦Namur, Bruxelles↦Liege, Liege↦Bruxelles}→BOOL"/>
    <org.eventb.core.invariant name="_SrxYQeE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="inv5" org.eventb.core.predicate="Gares_urgence ∈ {Huy,Ottignies,Leuven}→ℕ"/>
    <org.eventb.core.invariant name="_SrxYQuE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="inv6" org.eventb.core.predicate="nb_train_urgence ∈ {Huy,Ottignies,Leuven} → ℕ"/>
    <org.eventb.core.invariant name="_SrxYQ-E_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="inv7" org.eventb.core.predicate="Line_urgence ∈ {Namur↦Bruxelles,Bruxelles↦Namur, Namur↦Liege, Liege↦Namur, Bruxelles↦Liege, Liege↦Bruxelles}→dom(Gares_urgence)"/>
    <org.eventb.core.invariant name="_Srz0gOE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="inv8" org.eventb.core.predicate="Second_Line ∈ {Namur↦Bruxelles, Bruxelles↦Namur, Namur↦Liege, Liege↦Namur, Bruxelles↦Liege, Liege↦Bruxelles} → ℕ"/>
    <org.eventb.core.invariant name="_Srz0geE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="inv9" org.eventb.core.predicate="In_Second_Line ∈ {Namur↦Bruxelles, Bruxelles↦Namur, Namur↦Liege, Liege↦Namur, Bruxelles↦Liege, Liege↦Bruxelles} → BOOL"/>
    <org.eventb.core.invariant name="_Srz0guE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="inv10" org.eventb.core.predicate="Line_Gare ∈ {Namur↦Bruxelles, Bruxelles↦Namur, Namur↦Liege, Liege↦Namur, Bruxelles↦Liege, Liege↦Bruxelles} → dom(Gares)"/>
    <org.eventb.core.invariant name="_Srz0g-E_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="inv11" org.eventb.core.predicate="nb_train_total ∈ ℕ"/>
    <org.eventb.core.invariant name="_Sr2QwOE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="inv12" org.eventb.core.predicate="Freinage_Line ∈ {Bruxelles, Namur, Liege} → BOOL"/>
    <org.eventb.core.invariant name="_Sr2QweE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="inv13" org.eventb.core.predicate="temp ∈ ℕ"/>
    <org.eventb.core.invariant name="_Sr2QwuE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="inv14" org.eventb.core.predicate="temp2 ∈ ℕ"/>
    <org.eventb.core.invariant name="_Sr2Qw-E_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="inv15" org.eventb.core.predicate="State_system ∈ BOOL"/>
    <org.eventb.core.invariant name="_Sr4tAOE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="inv16" org.eventb.core.predicate="State_brake ∈ BOOL"/>
    <org.eventb.core.invariant name="_Sr4tAeE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="inv17" org.eventb.core.predicate="In_First_Line ∈ {Namur↦Bruxelles, Bruxelles↦Namur, Namur↦Liege, Liege↦Namur, Bruxelles↦Liege, Liege↦Bruxelles} → BOOL"/>
    <org.eventb.core.invariant name="_Sr4tAuE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="inv18" org.eventb.core.predicate="temp3 ∈ BOOL"/>
    <org.eventb.core.invariant name="_Sr4tA-E_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="inv19" org.eventb.core.predicate="temp4 ∈ BOOL"/>
    <org.eventb.core.event name="_Sr7JQOE_Ee2KaoH_Krztlw" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="Apparition_train">
        <org.eventb.core.parameter name="_Sr7JQeE_Ee2KaoH_Krztlw" org.eventb.core.comment="Sélectionne une gare pour faire apparaître un train" org.eventb.core.generated="false" org.eventb.core.identifier="SelectGare"/>
        <org.eventb.core.guard name="_Sr7JQuE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd1" org.eventb.core.predicate="SelectGare ∈ dom(Gares)"/>
        <org.eventb.core.guard name="_Sr7JQ-E_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd2" org.eventb.core.predicate="nb_train(SelectGare) &lt; 2"/>
        <org.eventb.core.guard name="_Sr9lgOE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd3" org.eventb.core.predicate="nb_train_total &lt; 4"/>
        <org.eventb.core.guard name="_Sr9lgeE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd4" org.eventb.core.predicate="Freinage_Line(SelectGare) = FALSE"/>
        <org.eventb.core.guard name="_Sr9lguE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd5" org.eventb.core.predicate="State_system = FALSE"/>
        <org.eventb.core.guard name="_Sr9lg-E_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd6" org.eventb.core.predicate="State_brake = FALSE"/>
        <org.eventb.core.action name="_SsABwOE_Ee2KaoH_Krztlw" org.eventb.core.assignment="nb_train(SelectGare) ≔ nb_train(SelectGare) + 1" org.eventb.core.generated="false" org.eventb.core.label="act1"/>
        <org.eventb.core.action name="_SsABweE_Ee2KaoH_Krztlw" org.eventb.core.assignment="nb_train_total ≔ nb_train_total + 1" org.eventb.core.generated="false" org.eventb.core.label="act2"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_SsABwuE_Ee2KaoH_Krztlw" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="Station_To_Line">
        <org.eventb.core.parameter name="_SsABw-E_Ee2KaoH_Krztlw" org.eventb.core.comment="Sélectionne une gare de départ" org.eventb.core.generated="false" org.eventb.core.identifier="SelectGP"/>
        <org.eventb.core.parameter name="_SsCeAOE_Ee2KaoH_Krztlw" org.eventb.core.comment="Sélectionne une gare de destination" org.eventb.core.generated="false" org.eventb.core.identifier="SelectTrajet"/>
        <org.eventb.core.parameter name="_SsCeAeE_Ee2KaoH_Krztlw" org.eventb.core.comment="Fais la liaison entre les lignes de convois grâce aux gares d'arrivées et de destinations sélectionné. Ainsi est créé, le nom du train" org.eventb.core.generated="false" org.eventb.core.identifier="SelectTrain"/>
        <org.eventb.core.guard name="_SsCeAuE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd1" org.eventb.core.predicate="SelectGP ∈ dom(Gares) ∧ nb_train(SelectGP) ≥ 1"/>
        <org.eventb.core.guard name="_SsCeA-E_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd2" org.eventb.core.predicate="SelectTrajet ∈ dom(Gares)"/>
        <org.eventb.core.guard name="_SsCeBOE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd3" org.eventb.core.predicate="SelectTrain ∈ dom(Line) ∧ SelectTrain = SelectGP↦SelectTrajet"/>
        <org.eventb.core.guard name="_SsE6QOE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd4" org.eventb.core.predicate="Line(SelectTrain) &lt; 1"/>
        <org.eventb.core.guard name="_SsE6QeE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd5" org.eventb.core.predicate="State_system = FALSE"/>
        <org.eventb.core.guard name="_SsE6QuE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd6" org.eventb.core.predicate="State_brake = FALSE"/>
        <org.eventb.core.action name="_SsE6Q-E_Ee2KaoH_Krztlw" org.eventb.core.assignment="nb_train(SelectGP) ≔ nb_train(SelectGP) − 1" org.eventb.core.generated="false" org.eventb.core.label="act1"/>
        <org.eventb.core.action name="_SsHWgOE_Ee2KaoH_Krztlw" org.eventb.core.assignment="Line(SelectTrain) ≔ Line(SelectTrain) + 1" org.eventb.core.generated="false" org.eventb.core.label="act2"/>
        <org.eventb.core.action name="_SsHWgeE_Ee2KaoH_Krztlw" org.eventb.core.assignment="In_First_Line(SelectTrain) ≔ TRUE" org.eventb.core.generated="false" org.eventb.core.label="act3"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_SsHWguE_Ee2KaoH_Krztlw" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="Line_To_Emergency_Station">
        <org.eventb.core.parameter name="_SsHWg-E_Ee2KaoH_Krztlw" org.eventb.core.comment="Sélectionne le nom du train (le nom est répresenté par la ligne de trajet du train)" org.eventb.core.generated="false" org.eventb.core.identifier="SelectTrain"/>
        <org.eventb.core.parameter name="_SsHWhOE_Ee2KaoH_Krztlw" org.eventb.core.comment="Séléctionne la gare d'urgence pour éviter une collision" org.eventb.core.generated="false" org.eventb.core.identifier="SelectGareUrgence"/>
        <org.eventb.core.guard name="_SsJywOE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd1" org.eventb.core.predicate="SelectTrain ∈ dom(Line)"/>
        <org.eventb.core.guard name="_SsJyweE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd2" org.eventb.core.predicate="Line(SelectTrain)  ≥ 1"/>
        <org.eventb.core.guard name="_SsJywuE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd3" org.eventb.core.predicate="SelectGareUrgence ∈ dom(Gares_urgence) ∧ nb_train_urgence(SelectGareUrgence) &lt; 1"/>
        <org.eventb.core.guard name="_SsJyw-E_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd4" org.eventb.core.predicate="Line_urgence(SelectTrain) = SelectGareUrgence"/>
        <org.eventb.core.guard name="_SsJyxOE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd5" org.eventb.core.predicate="Aiguillages(SelectTrain) = TRUE"/>
        <org.eventb.core.guard name="_SsMPAOE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd6" org.eventb.core.predicate="State_system = FALSE"/>
        <org.eventb.core.guard name="_SsMPAeE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd7" org.eventb.core.predicate="State_brake = FALSE"/>
        <org.eventb.core.action name="_SsMPAuE_Ee2KaoH_Krztlw" org.eventb.core.assignment="nb_train_urgence(SelectGareUrgence) ≔ nb_train_urgence(SelectGareUrgence) + 1" org.eventb.core.generated="false" org.eventb.core.label="act1"/>
        <org.eventb.core.action name="_SsMPA-E_Ee2KaoH_Krztlw" org.eventb.core.assignment="Line(SelectTrain) ≔ Line(SelectTrain) − 1" org.eventb.core.generated="false" org.eventb.core.label="act2"/>
        <org.eventb.core.action name="_SsOrQOE_Ee2KaoH_Krztlw" org.eventb.core.assignment="In_First_Line(SelectTrain) ≔ FALSE" org.eventb.core.generated="false" org.eventb.core.label="act3"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_SsOrQeE_Ee2KaoH_Krztlw" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="Emergency_To_Second_Line">
        <org.eventb.core.parameter name="_SsOrQuE_Ee2KaoH_Krztlw" org.eventb.core.comment="Sélectionne la gare d'urgence de départ" org.eventb.core.generated="false" org.eventb.core.identifier="SelectGare"/>
        <org.eventb.core.parameter name="_SsOrQ-E_Ee2KaoH_Krztlw" org.eventb.core.comment="Sélectionne le nom du train présent dans la gare de départ (le nom est répresenté par la ligne de trajet du train)" org.eventb.core.generated="false" org.eventb.core.identifier="SelectTrain"/>
        <org.eventb.core.guard name="_SsOrROE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd1" org.eventb.core.predicate="SelectGare ∈ dom(Gares_urgence)"/>
        <org.eventb.core.guard name="_SsRHgOE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd2" org.eventb.core.predicate="SelectTrain ∈ dom(Line)"/>
        <org.eventb.core.guard name="_SsRHgeE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd3" org.eventb.core.predicate="Line_urgence(SelectTrain) = SelectGare"/>
        <org.eventb.core.guard name="_SsRHguE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd4" org.eventb.core.predicate="nb_train_urgence(SelectGare) ≥ 1"/>
        <org.eventb.core.guard name="_SsRHg-E_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd5" org.eventb.core.predicate="Second_Line(SelectTrain) &lt; 1"/>
        <org.eventb.core.guard name="_SsTjwOE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd6" org.eventb.core.predicate="Aiguillages(SelectTrain) = TRUE"/>
        <org.eventb.core.guard name="_SsTjweE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd7" org.eventb.core.predicate="State_system = FALSE"/>
        <org.eventb.core.guard name="_SsTjwuE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd8" org.eventb.core.predicate="State_brake = FALSE"/>
        <org.eventb.core.action name="_SsTjw-E_Ee2KaoH_Krztlw" org.eventb.core.assignment="nb_train_urgence(SelectGare) ≔ nb_train_urgence(SelectGare) − 1" org.eventb.core.generated="false" org.eventb.core.label="act1"/>
        <org.eventb.core.action name="_SsTjxOE_Ee2KaoH_Krztlw" org.eventb.core.assignment="Second_Line(SelectTrain) ≔ Second_Line(SelectTrain) + 1" org.eventb.core.generated="false" org.eventb.core.label="act2"/>
        <org.eventb.core.action name="_SsWAAOE_Ee2KaoH_Krztlw" org.eventb.core.assignment="In_Second_Line(SelectTrain) ≔ TRUE" org.eventb.core.generated="false" org.eventb.core.label="act3"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_SsWAAeE_Ee2KaoH_Krztlw" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="Line_To_Second_Line">
        <org.eventb.core.parameter name="_SsWAAuE_Ee2KaoH_Krztlw" org.eventb.core.comment="Sélectionne la gare d'ou provient le train" org.eventb.core.generated="false" org.eventb.core.identifier="SelectGareLine"/>
        <org.eventb.core.parameter name="_SsWAA-E_Ee2KaoH_Krztlw" org.eventb.core.comment="Sélectionne la gare où il se rendra" org.eventb.core.generated="false" org.eventb.core.identifier="SelectSecondGareLine"/>
        <org.eventb.core.guard name="_SsWABOE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd1" org.eventb.core.predicate="SelectGareLine ∈ dom(dom(Line)) ∧ SelectSecondGareLine ∈ ran(dom(Line))"/>
        <org.eventb.core.guard name="_SsYcQOE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd2" org.eventb.core.predicate="SelectGareLine ≠ SelectSecondGareLine"/>
        <org.eventb.core.guard name="_SsYcQeE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd3" org.eventb.core.predicate="Line(SelectGareLine↦SelectSecondGareLine) = 1 ∧ Second_Line(SelectGareLine↦SelectSecondGareLine)&lt;1"/>
        <org.eventb.core.guard name="_SsYcQuE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd4" org.eventb.core.predicate="Aiguillages(SelectGareLine↦SelectSecondGareLine) = FALSE"/>
        <org.eventb.core.guard name="_SsYcQ-E_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd5" org.eventb.core.predicate="State_system = FALSE"/>
        <org.eventb.core.guard name="_Ssa4gOE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd6" org.eventb.core.predicate="State_brake = FALSE"/>
        <org.eventb.core.guard name="_Ssa4geE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd7" org.eventb.core.predicate="(Line(SelectGareLine↦SelectSecondGareLine) ≠ 1 ∧ Second_Line(SelectSecondGareLine↦SelectGareLine)≠1) ∨ (Line(SelectGareLine↦SelectSecondGareLine) ≠ 1 ∧ Second_Line(SelectSecondGareLine↦SelectGareLine)≠0) ∨ (Line(SelectGareLine↦SelectSecondGareLine) ≠ 0 ∧ Second_Line(SelectSecondGareLine↦SelectGareLine)≠1)"/>
        <org.eventb.core.action name="_Ssa4guE_Ee2KaoH_Krztlw" org.eventb.core.assignment="In_Second_Line(SelectGareLine↦SelectSecondGareLine) ≔ TRUE" org.eventb.core.generated="false" org.eventb.core.label="act1"/>
        <org.eventb.core.action name="_Ssa4g-E_Ee2KaoH_Krztlw" org.eventb.core.assignment="Line(SelectGareLine↦SelectSecondGareLine) ≔ Line(SelectGareLine↦SelectSecondGareLine) − 1" org.eventb.core.generated="false" org.eventb.core.label="act2"/>
        <org.eventb.core.action name="_Ssa4hOE_Ee2KaoH_Krztlw" org.eventb.core.assignment="Second_Line(SelectGareLine↦SelectSecondGareLine) ≔ Second_Line(SelectGareLine↦SelectSecondGareLine) + 1" org.eventb.core.generated="false" org.eventb.core.label="act3"/>
        <org.eventb.core.action name="_SsdUwOE_Ee2KaoH_Krztlw" org.eventb.core.assignment="State_system :∣ (State_system' ∈ BOOL) ∧ ((Line(SelectGareLine↦SelectSecondGareLine) = 1 ∧ Second_Line(SelectSecondGareLine↦SelectGareLine)=1 ⇒ State_system' = TRUE) ∧ (Line(SelectGareLine↦SelectSecondGareLine) ≠ 1 ∨ Second_Line(SelectSecondGareLine↦SelectGareLine)≠1 ⇒ State_system' = FALSE))" org.eventb.core.generated="false" org.eventb.core.label="act4"/>
        <org.eventb.core.action name="_SsdUweE_Ee2KaoH_Krztlw" org.eventb.core.assignment="In_First_Line(SelectGareLine↦SelectSecondGareLine) ≔ FALSE" org.eventb.core.generated="false" org.eventb.core.label="act5"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_SsdUwuE_Ee2KaoH_Krztlw" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="Second_Line_To_Station">
        <org.eventb.core.parameter name="_SsdUw-E_Ee2KaoH_Krztlw" org.eventb.core.comment="Sélectionne la gare d'où provient le train" org.eventb.core.generated="false" org.eventb.core.identifier="SelectGareLine"/>
        <org.eventb.core.parameter name="_SsdUxOE_Ee2KaoH_Krztlw" org.eventb.core.comment="Sélectionne la gare d'arrivée où le train est censé aller" org.eventb.core.generated="false" org.eventb.core.identifier="SelectSecondGareLine"/>
        <org.eventb.core.parameter name="_SsfxAOE_Ee2KaoH_Krztlw" org.eventb.core.comment="Sélectionne la gare d'arrivée (Peut-être redondant mais nécessaire pour les gardes de l'événement)" org.eventb.core.generated="false" org.eventb.core.identifier="SelectGare"/>
        <org.eventb.core.guard name="_SsfxAeE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd1" org.eventb.core.predicate="SelectGareLine ∈ dom(dom(Second_Line)) ∧ SelectSecondGareLine ∈ ran(dom(Second_Line))"/>
        <org.eventb.core.guard name="_SsfxAuE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd2" org.eventb.core.predicate="SelectGareLine ≠ SelectSecondGareLine"/>
        <org.eventb.core.guard name="_SsfxA-E_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd3" org.eventb.core.predicate="SelectGare ∈ ran(dom(Second_Line))"/>
        <org.eventb.core.guard name="_SsiNQOE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd4" org.eventb.core.predicate="Line_Gare(SelectGareLine↦SelectSecondGareLine) = SelectGare"/>
        <org.eventb.core.guard name="_SsiNQeE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd5" org.eventb.core.predicate="Second_Line(SelectGareLine↦SelectSecondGareLine) ≥ 1 ∧ nb_train(SelectGare) &lt; 1"/>
        <org.eventb.core.guard name="_SsiNQuE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd6" org.eventb.core.predicate="In_Second_Line(SelectGareLine↦SelectSecondGareLine) = TRUE ∧ In_First_Line(SelectSecondGareLine↦SelectGareLine) = FALSE"/>
        <org.eventb.core.guard name="_SsiNROE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd8" org.eventb.core.predicate="State_system = FALSE"/>
        <org.eventb.core.guard name="_SskpgOE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd9" org.eventb.core.predicate="State_brake = FALSE"/>
        <org.eventb.core.action name="_SskpgeE_Ee2KaoH_Krztlw" org.eventb.core.assignment="Second_Line(SelectGareLine↦SelectSecondGareLine) ≔ Second_Line(SelectGareLine↦SelectSecondGareLine) − 1" org.eventb.core.generated="false" org.eventb.core.label="act1"/>
        <org.eventb.core.action name="_SskpguE_Ee2KaoH_Krztlw" org.eventb.core.assignment="nb_train(SelectGare) ≔ nb_train(SelectGare)+1" org.eventb.core.generated="false" org.eventb.core.label="act2"/>
        <org.eventb.core.action name="_Sskpg-E_Ee2KaoH_Krztlw" org.eventb.core.assignment="In_Second_Line(SelectGareLine↦SelectSecondGareLine) ≔ FALSE" org.eventb.core.generated="false" org.eventb.core.label="act3"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_SsnFwOE_Ee2KaoH_Krztlw" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="Choose_Aiguillage">
        <org.eventb.core.parameter name="_SsnFweE_Ee2KaoH_Krztlw" org.eventb.core.comment="Sélectionne la ligne de convois où on souhaite changer l'aiguillage" org.eventb.core.generated="false" org.eventb.core.identifier="SelectLine"/>
        <org.eventb.core.parameter name="_SsnFwuE_Ee2KaoH_Krztlw" org.eventb.core.comment="Sélectionne la position de l'aiguillage. (TRUE or FALSE)" org.eventb.core.generated="false" org.eventb.core.identifier="SelectAction"/>
        <org.eventb.core.guard name="_SsnFw-E_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd1" org.eventb.core.predicate="SelectLine ∈ dom(Line)"/>
        <org.eventb.core.guard name="_SsnFxOE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd2" org.eventb.core.predicate="SelectAction ∈ BOOL ∧ SelectAction ≠ Aiguillages(SelectLine)"/>
        <org.eventb.core.action name="_SspiAOE_Ee2KaoH_Krztlw" org.eventb.core.assignment="Aiguillages(SelectLine) ≔ SelectAction" org.eventb.core.generated="false" org.eventb.core.label="act1"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_SspiAeE_Ee2KaoH_Krztlw" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="Freinage_Urgence">
        <org.eventb.core.parameter name="_SspiAuE_Ee2KaoH_Krztlw" org.eventb.core.comment="Sélectionne la première ligne de convois où se trouve un train" org.eventb.core.generated="false" org.eventb.core.identifier="SelectTrain"/>
        <org.eventb.core.parameter name="_SspiA-E_Ee2KaoH_Krztlw" org.eventb.core.comment="Sélectionne la seconde ligne de convois où se trouve le second train" org.eventb.core.generated="false" org.eventb.core.identifier="SelectSecondTrain"/>
        <org.eventb.core.parameter name="_SspiBOE_Ee2KaoH_Krztlw" org.eventb.core.comment="Sélectionne les gares possibles pour enclencher une marche arrière" org.eventb.core.generated="false" org.eventb.core.identifier="SelectGare"/>
        <org.eventb.core.guard name="_Ssr-QOE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd1" org.eventb.core.predicate="SelectTrain ∈ dom(Line_Gare) ∧ SelectSecondTrain ∈ dom(Line_Gare)"/>
        <org.eventb.core.guard name="_Ssr-QeE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd2" org.eventb.core.predicate="Line(SelectTrain) ≥ 1  ∧ Second_Line(SelectSecondTrain) ≥ 1"/>
        <org.eventb.core.guard name="_Ssr-QuE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd3" org.eventb.core.predicate="SelectTrain ≠ SelectSecondTrain"/>
        <org.eventb.core.guard name="_Ssr-Q-E_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd4" org.eventb.core.predicate="(Line(SelectSecondTrain) &lt; 1 ∧ SelectGare = Line_Gare(SelectTrain)) ∨ ( SelectGare = Line_Gare(SelectSecondTrain) )"/>
        <org.eventb.core.guard name="_SsuagOE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd5" org.eventb.core.predicate="nb_train(SelectGare) &lt; 2"/>
        <org.eventb.core.guard name="_SsuageE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd6" org.eventb.core.predicate="State_brake = FALSE"/>
        <org.eventb.core.action name="_SsuaguE_Ee2KaoH_Krztlw" org.eventb.core.assignment="temp :∣ (temp' ∈ ℕ ∧ (SelectGare = Line_Gare(SelectTrain) ⇒ temp'= 0) ∧ ( SelectGare = Line_Gare(SelectSecondTrain)⇒ temp'=1))" org.eventb.core.generated="false" org.eventb.core.label="act1"/>
        <org.eventb.core.action name="_Ssuag-E_Ee2KaoH_Krztlw" org.eventb.core.assignment="temp2 :∣ (temp2' ∈ ℕ ∧ (SelectGare = Line_Gare(SelectTrain) ⇒ temp2'= 1) ∧ ( SelectGare = Line_Gare(SelectSecondTrain)⇒ temp2'=0))" org.eventb.core.generated="false" org.eventb.core.label="act2"/>
        <org.eventb.core.action name="_SsuahOE_Ee2KaoH_Krztlw" org.eventb.core.assignment="temp3 :∣ (temp3' ∈ BOOL ∧ (SelectGare = Line_Gare(SelectTrain) ⇒ temp3'= TRUE) ∧ ( SelectGare = Line_Gare(SelectSecondTrain)⇒ temp3'=FALSE))" org.eventb.core.generated="false" org.eventb.core.label="act3"/>
        <org.eventb.core.action name="_Ssw2wOE_Ee2KaoH_Krztlw" org.eventb.core.assignment="temp4 :∣ (temp4' ∈ BOOL ∧ (SelectGare = Line_Gare(SelectTrain) ⇒ temp4'= FALSE) ∧ ( SelectGare = Line_Gare(SelectSecondTrain)⇒ temp4'=TRUE))" org.eventb.core.generated="false" org.eventb.core.label="act4"/>
        <org.eventb.core.action name="_Ssw2weE_Ee2KaoH_Krztlw" org.eventb.core.assignment="Freinage_Line(SelectGare) ≔ TRUE" org.eventb.core.generated="false" org.eventb.core.label="act5"/>
        <org.eventb.core.action name="_Ssw2wuE_Ee2KaoH_Krztlw" org.eventb.core.assignment="State_system ≔ TRUE" org.eventb.core.generated="false" org.eventb.core.label="act6"/>
        <org.eventb.core.action name="_Ssw2w-E_Ee2KaoH_Krztlw" org.eventb.core.assignment="State_brake ≔ TRUE" org.eventb.core.generated="false" org.eventb.core.label="act7"/>
        <org.eventb.core.guard name="_Ssw2wuE_Ee2KaoH_Krztlx" org.eventb.core.label="grd7" org.eventb.core.predicate="Line_urgence(SelectTrain) = Line_urgence(SelectSecondTrain)"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_Ssw2xOE_Ee2KaoH_Krztlw" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="Marche_Arriere_Station">
        <org.eventb.core.parameter name="_SszTAOE_Ee2KaoH_Krztlw" org.eventb.core.comment="Sélectionne la première ligne de convois où se trouve un train" org.eventb.core.generated="false" org.eventb.core.identifier="SelectTrain"/>
        <org.eventb.core.parameter name="_SszTAeE_Ee2KaoH_Krztlw" org.eventb.core.comment="Sélectionne la seconde ligne de convois où se trouve le second train" org.eventb.core.generated="false" org.eventb.core.identifier="SelectSecondTrain"/>
        <org.eventb.core.parameter name="_SszTAuE_Ee2KaoH_Krztlw" org.eventb.core.comment="Sélectionne les gares possibles pour enclencher une marche arrière" org.eventb.core.generated="false" org.eventb.core.identifier="SelectGare"/>
        <org.eventb.core.guard name="_SszTA-E_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd1" org.eventb.core.predicate="SelectTrain ∈ dom(Line_Gare) ∧ SelectSecondTrain ∈ dom(Line_Gare)"/>
        <org.eventb.core.guard name="_SszTBOE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd2" org.eventb.core.predicate="Line(SelectTrain) ≥ 1  ∧ Second_Line(SelectSecondTrain) ≥ 1"/>
        <org.eventb.core.guard name="_Ss1vQOE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd3" org.eventb.core.predicate="SelectTrain ≠ SelectSecondTrain"/>
        <org.eventb.core.guard name="_Ss1vQeE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd4" org.eventb.core.predicate="SelectGare = Line_Gare(SelectTrain) ∨ SelectGare = Line_Gare(SelectSecondTrain)"/>
        <org.eventb.core.guard name="_Ss1vQuE_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd5" org.eventb.core.predicate="nb_train(SelectGare) &lt; 2"/>
        <org.eventb.core.guard name="_Ss1vQ-E_Ee2KaoH_Krztlw" org.eventb.core.generated="false" org.eventb.core.label="grd6" org.eventb.core.predicate="Freinage_Line(SelectGare) = TRUE"/>
        <org.eventb.core.action name="_Ss4LgOE_Ee2KaoH_Krztlw" org.eventb.core.assignment="Line(SelectTrain) ≔ Line(SelectTrain) − temp" org.eventb.core.generated="false" org.eventb.core.label="act1"/>
        <org.eventb.core.action name="_Ss4LgeE_Ee2KaoH_Krztlw" org.eventb.core.assignment="Second_Line(SelectSecondTrain) ≔ Second_Line(SelectSecondTrain) − temp2" org.eventb.core.generated="false" org.eventb.core.label="act2"/>
        <org.eventb.core.action name="_Ss4LguE_Ee2KaoH_Krztlw" org.eventb.core.assignment="nb_train(SelectGare) ≔ nb_train(SelectGare) + 1" org.eventb.core.generated="false" org.eventb.core.label="act3"/>
        <org.eventb.core.action name="_Ss4Lg-E_Ee2KaoH_Krztlw" org.eventb.core.assignment="Freinage_Line(SelectGare) ≔ FALSE" org.eventb.core.generated="false" org.eventb.core.label="act4"/>
        <org.eventb.core.action name="_Ss4LhOE_Ee2KaoH_Krztlw" org.eventb.core.assignment="State_system ≔ FALSE" org.eventb.core.generated="false" org.eventb.core.label="act5"/>
        <org.eventb.core.action name="_Ss6nwOE_Ee2KaoH_Krztlw" org.eventb.core.assignment="State_brake ≔ FALSE" org.eventb.core.generated="false" org.eventb.core.label="act6"/>
        <org.eventb.core.action name="_Ss6nweE_Ee2KaoH_Krztlw" org.eventb.core.assignment="In_First_Line(SelectTrain) ≔ temp3" org.eventb.core.generated="false" org.eventb.core.label="act7"/>
        <org.eventb.core.action name="_Ss6nwuE_Ee2KaoH_Krztlw" org.eventb.core.assignment="In_Second_Line(SelectSecondTrain) ≔ temp4" org.eventb.core.generated="false" org.eventb.core.label="act8"/>
    </org.eventb.core.event>
</org.eventb.core.machineFile>
